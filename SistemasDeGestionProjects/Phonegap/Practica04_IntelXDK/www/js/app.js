/*
 * Please see the included README.md file for license terms and conditions.
 */


// This file is a suggested starting place for your code.
// It is completely optional and not required.
// Note the reference that includes it in the index.html file.


/*jslint browser:true, devel:true, white:true, vars:true */
/*global $:false, intel:false app:false, dev:false, cordova:false */


// For improved debugging and maintenance of your app, it is highly
// recommended that you separate your JavaScript from your HTML files.
// Use the addEventListener() method to associate events with DOM elements.

// For example:

// var el ;
// el = document.getElementById("id_myButton") ;
// el.addEventListener("click", myEventHandler, false) ;



// The function below is an example of the best way to "start" your app.
// This example is calling the standard Cordova "hide splashscreen" function.
// You can add other code to it or add additional functions that are triggered
// by the same event or other events.

function onAppReady() {
    if( navigator.splashscreen && navigator.splashscreen.hide ) {   // Cordova API detected
        navigator.splashscreen.hide() ;
    }
    
    //Exercici 1
    $('#button').click(function(){
        $('#contenido').html($('#inputText').val());
    });

    //Exercici 2
    $('.numbers').click(function(){
       $('#resultatCalculadora').append($(this).text());
    });
    
    $('#calcularResultat').click(function(){
        $('#resultatCalculadora').html(eval($('#resultatCalculadora').text()));
    });
    
    //Exercici 3
    $('.horariEditable').click(function(){
        var text = prompt("Introduce el texto:");
        $(this).html(text);
    });
    
    //Exercici 4
    $('#addTask').click(function(){
        textoTarea = prompt("Escribe una breve descripción de la tarea:");
        $('#taskList').append("<li class='taskElement'>" + textoTarea + "</li>");
    });
    
    //FIX-ME. Solo elimina la primera tarea, es como si al añadir una tarea, ese elemento no tenga ningún evento.
    $('.taskElement').click(function(){
        respuesta = prompt("¿Eliminar la tarea?(Si/No)");
        if (respuesta === "Si") {
            $(this).remove();
        }
    });
    
    //Exercici 5
    
    $('#startCountdown').click(function(){
        $('#resultadoCountdown').css({"color":"black"});
        if ($('#numeroUsuario').val() > 0) {
            //Start countdown
            counter = $('#numeroUsuario').val();
            id = setInterval(function() {
                counter--;
                if(counter <= 10) {
                    $('#resultadoCountdown').css({"color":"red"});
                    if (counter <=0) {
                        clearInterval(id);
                    }
                }
                $('#resultadoCountdown').html(counter);
            }, 1000);
        } else {
            alert("El número ha de ser mayor a 10");
        }
    });
    
    
}

document.addEventListener("app.Ready", onAppReady, false) ;

// document.addEventListener("deviceready", onAppReady, false) ;
// document.addEventListener("onload", onAppReady, false) ;

// The app.Ready event shown above is generated by the init-dev.js file; it
// unifies a variety of common "ready" events. See the init-dev.js file for
// more details. You can use a different event to start your app, instead of
// this event. A few examples are shown in the sample code above. If you are
// using Cordova plugins you need to either use this app.Ready event or the
// standard Crordova deviceready event. Others will either not work or will
// work poorly.

// NOTE: change "dev.LOG" in "init-dev.js" to "true" to enable some console.log
// messages that can help you debug Cordova app initialization issues.
